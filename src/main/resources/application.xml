<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--<context:property-placeholder location="application.properties"/>-->
    <context:component-scan base-package="spring"
                            resource-pattern="**/*.class"
                            scoped-proxy="no"
                            use-default-filters="false">



        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:include-filter type="assignable" expression="spring.database.repository.CrudRepository"/>
        <context:include-filter type="regex" expression="spring\..+Repository"/>
    </context:component-scan>
    <!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations" value="application.properties"/>
    </bean>-->



    <bean id="driver" class="java.lang.String">
        <constructor-arg type="java.lang.String" value="${db.driver}"/>
    </bean>


    <bean id="companyRepository" class="spring.database.repository.CompanyRepository"/>
</beans>

<!--
<constructor-arg name="username" value="${db.username}" type="java.lang.String"/>
        <constructor-arg name="poolSize" value="${db.pool.size}" type="java.lang.Integer"/>
        <constructor-arg name="args" type="java.util.List">
            <list>
                <value>-arg1=value1</value>
                <value>-arg2=value2</value>
                <value>-arg3=value3</value>
                <value>-arg4=value4</value>
            </list>
        </constructor-arg>
        <constructor-arg name="properties" type="java.util.Map">
            <null/>
        </constructor-arg>
        <property name="properties">
            <map>
                <entry key="url" value="postgresurl"/>
                <entry key="password" value="123"/>
                <entry key="driver" value-ref="driver"/>
                <entry key="test" value="#{driver.length() > 10}"/>
                <entry key="test1" value="#{driver.length() > T(Math).random() * 2}"/>
                <entry key="hosts" value="#{'${db.hosts}'.split(',')}"/>
            </map>
        </property>
-->